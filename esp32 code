#include <WiFi.h>
#include <ESP32Servo.h>

// Servo objects
Servo servo1, servo2, servo3, servo4;

// Ultrasonic sensor pins
#define TRIG_PIN 27
#define ECHO_PIN 26

// Wi-Fi credentials
const char* ssid = "Your_SSID";
const char* password = "Your_PASSWORD";

// Target distance from water to bridge (in cm)
const int targetDistance = 7;

// Servo angle range
const int minAngle = 0;
const int maxAngle = 180;

// Global variable to store water height
int waterHeight = 0;

// Wi-Fi Server
WiFiServer server(80);

void setup() {
  // Initialize Serial Monitor
  Serial.begin(115200);

  // Attach servos
  servo1.attach(12); // GPIO12
  servo2.attach(13); // GPIO13
  servo3.attach(14); // GPIO14
  servo4.attach(15); // GPIO15

  // Initialize ultrasonic sensor pins
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\nConnected to Wi-Fi");
  Serial.println(WiFi.localIP());

  // Start the server
  server.begin();
}

void loop() {
  // Measure water height
  waterHeight = measureDistance();
  Serial.print("Water Height: ");
  Serial.println(waterHeight);

  // Calculate height adjustment and set servo angles
  int heightAdjustment = targetDistance - waterHeight;
  int targetAngle = map(heightAdjustment, -10, 10, minAngle, maxAngle);
  targetAngle = constrain(targetAngle, minAngle, maxAngle);

  // Move all servos to the calculated angle
  servo1.write(targetAngle);
  servo2.write(targetAngle);
  servo3.write(targetAngle);
  servo4.write(targetAngle);

  // Handle client requests for water height
  WiFiClient client = server.available();
  if (client) {
    Serial.println("New Client Connected");
    String request = client.readStringUntil('\r');
    client.flush();

    // Send HTTP response with water height
    client.println("HTTP/1.1 200 OK");
    client.println("Content-Type: text/html");
    client.println();
    client.print("<html><body><h1>Water Height: ");
    client.print(waterHeight);
    client.print(" cm</h1></body></html>");
    delay(1);
    Serial.println("Client Disconnected");
  }

  delay(500); // Delay for stability
}

// Function to measure water height using the ultrasonic sensor
int measureDistance() {
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  long duration = pulseIn(ECHO_PIN, HIGH);
  int distance = duration * 0.034 / 2; // Convert to cm
  return distance;
}
