#include <Servo.h>

// Servo objects
Servo servo1, servo2, servo3, servo4;

// Ultrasonic sensor pins
#define TRIG_PIN 7
#define ECHO_PIN 6

// Target distance from water to bridge (in cm)
const int targetDistance = 7;

// Servo range and arm length
const int minAngle = 0;      // Minimum servo angle
const int maxAngle = 180;    // Maximum servo angle
const float servoArmLength = 10.0; // Length of the servo arm in cm

void setup() {
  // Initialize servo objects
  servo1.attach(9);
  servo2.attach(10);
  servo3.attach(11);
  servo4.attach(12);

  // Initialize ultrasonic sensor pins
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);

  // Start serial monitor
  Serial.begin(9600);
}

void loop() {
  // Measure current water level
  int waterLevel = measureDistance();
  Serial.print("Water Level: ");
  Serial.println(waterLevel);

  // Calculate and set servo angles
  adjustServos(waterLevel);

  delay(500); // Short delay for smooth operation
}

// Function to measure water level using the ultrasonic sensor
int measureDistance() {
  // Send a 10-microsecond pulse to TRIG
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  // Read ECHO pin and calculate distance
  long duration = pulseIn(ECHO_PIN, HIGH);
  int distance = duration * 0.034 / 2; // Convert to cm
  return distance;
}

// Function to adjust servo angles based on water level
void adjustServos(int waterLevel) {
  // Calculate the height difference
  int heightDifference = targetDistance - waterLevel;

  // Calculate the required servo angle
  int targetAngle = map(heightDifference, -servoArmLength, servoArmLength, minAngle, maxAngle);

  // Constrain the angle within servo range
  targetAngle = constrain(targetAngle, minAngle, maxAngle);

  // Print the target angle for debugging
  Serial.print("Target Servo Angle: ");
  Serial.println(targetAngle);

  // Move all servos to the target angle
  servo1.write(targetAngle);
  servo2.write(targetAngle);
  servo3.write(targetAngle);
  servo4.write(targetAngle);
}
